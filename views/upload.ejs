<!DOCTYPE html>
<html lang="en">

<head>
  <title>アップロード</title>
  <%- include('common/head') %>
</head>

<body>
  <%- include('common/navbar', {logout: true}) %>
    <main class="container">
      <h3 class="header">Unity WebGLゲームを投稿する</h3>
      <form action="/upload/webgl" method="POST" enctype="multipart/form-data">
        <div class="row card-panel">
          <div class="input-field">
            <input id="creator_name" type="text" class="validate" name="creator_id" required aria-required />
            <label for="creator_name">作者ID</label>
          </div>
          <div class="input-field">
            <input id="game_name" type="text" class="validate" name="game_id" required aria-required />
            <label for="game_name">ゲームID</label>
          </div>
          <p>
            <label>
              <input type="checkbox" class="filled-in" name="overwrites_existing" />
              <span>上書きする</span>
            </label>
          </p>
        </div>
        <div class="row card-panel">
          <blockquote class="message-hidden-folder-files" style="display: none;">
            隠しフォルダ(.gitなど)内のフォルダはアップロードされません。
          </blockquote>
          <div class="input-field file-field-frame">
            <div class="placeholder">
              <h6>
                ここにフォルダをドロップ
              </h6>
              <div>または</div>
              <h6>
                クリックしてフォルダを選択
              </h6>
            </div>
            <input class="file-path validate" type="file" name="game" webkitdirectory required aria-required />
          </div>
          <div class="divider"></div>
          <ul class="collapsible">
            <li>
              <div class="collapsible-header">
                <i class="material-icons">keyboard_arrow_down</i>
                <span class="file-count">0個のファイル</span>
              </div>
              <div class="collapsible-body">
                <div class="file-list-header">http://localhost:3000/games/<span class="creator_id">(作者ID)</span>/<span
                    class="game_id">(ゲームID)</span>/</div>
                <div class="file-list"></div>
              </div>
            </li>
          </ul>
        </div>
        <div class="row center">
          <button type="submit" class="btn">アップロードする</button>
        </div>
      </form>
    </main>
    <script>
      //Materializeのロード
      document.addEventListener('DOMContentLoaded', function () {
        M.Collapsible.init(document.querySelector('.collapsible'), {
          onOpenStart: (elm) => {
            elm.querySelector('.collapsible-header>.material-icons').innerHTML = 'keyboard_arrow_up';
          },
          onCloseStart: (elm) => {
            elm.querySelector('.collapsible-header>.material-icons').innerHTML = 'keyboard_arrow_down';
          },
        });
      });
    </script>
    <script>
      //ドラッグ&ドロップ時のUI変化
      {
        const filesField = document.querySelector('input[name="game"]');
        const fileFieldFrame = document.querySelector(".input-field.file-field-frame");
        filesField.addEventListener("dragenter", (event) => {
          fileFieldFrame.classList.add("drag");
        });
        filesField.addEventListener("dragleave", (event) => {
          fileFieldFrame.classList.remove("drag");
        });
        filesField.addEventListener("drop", (event) => {
          fileFieldFrame.classList.remove("drag");
        });

      }
    </script>
    <script>
      {
        //ドロップ時の動作
        const filesField = document.querySelector('input[name="game"]');
        const fileList = document.querySelector('.file-list');
        filesField.addEventListener('change', (event) => onFilesDropped());
        function onFilesDropped() {
          fileList.innerHTML = '';
          document.querySelector('.message-hidden-folder-files').style.display = 'none';
          const filePaths = [];
          const dt = new DataTransfer();
          Array.from(filesField.files).filter((file) => {//隠しフォルダ内のファイルを除去
            const directories = file.webkitRelativePath.split('/');
            return directories.find((dir) => dir.startsWith('.')) === undefined;
          }).forEach((file) => {
            filePaths.push(file.webkitRelativePath.replace(/^[^\/]+\//, ''));
            dt.items.add(file);
          });
          const fileCountBefore = filesField.files.length;
          const fileCountAfter = dt.files.length;
          if (fileCountBefore > fileCountAfter) {
            document.querySelector('.message-hidden-folder-files').style.display = 'block';
          }
          filesField.files = dt.files;
          filePaths.sort();
          filePaths.forEach((path) => {
            let parent = fileList;
            path.split('/').forEach((section) => {
              let p_ul = Array.from(parent.childNodes).find((node) => node.tagName === 'UL');
              if (!p_ul) {
                p_ul = document.createElement('ul');
                parent.appendChild(p_ul);
              }
              let li = Array.from(p_ul.childNodes).find((node) => node.tagName === 'LI' && node.getAttribute('name') == section);
              if (!li) {
                li = document.createElement('li');
                li.innerHTML = section;
                li.setAttribute('name', section);
                p_ul.appendChild(li);
              }
              parent = li;
            });
          });
          const fileCount = document.querySelector('.file-count');
          fileCount.innerHTML = `${dt.items.length}個のファイル`;
        }
      }
    </script>
    <script>
      {
        //アップロード先URLの同期
        const creatorIdInput = document.querySelector('input[name="creator_id"]');
        creatorIdInput.addEventListener('change', (ev) => {
          let creatorId = creatorIdInput.value;
          if (creatorId.length == 0) {
            creatorId = '(作者ID)';
          }
          document.querySelector('.file-list-header>.creator_id').innerHTML = creatorId;
        });
        const gameIdInput = document.querySelector('input[name="game_id"]');
        gameIdInput.addEventListener('change', (ev) => {
          let gameId = gameIdInput.value;
          if (gameId.length == 0) {
            gameId = '(ゲームID)';
          }
          document.querySelector('.file-list-header>.game_id').innerHTML = gameId;
        });
      }
    </script>
    <%- include('common/footer') %>
      <%- include('common/scripts') %>
</body>

</html>